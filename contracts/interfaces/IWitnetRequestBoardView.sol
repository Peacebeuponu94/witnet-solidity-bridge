// SPDX-License-Identifier: MIT

pragma solidity >=0.7.0 <0.9.0;

import "../libs/Witnet.sol";

/// @title Witnet Request Board info interface.
/// @author The Witnet Foundation.
interface IWitnetRequestBoardView {
    /// Estimates the amount of reward we need to insert for a given gas price.
    /// @param _gasPrice The gas price for which we need to calculate the rewards.
    function estimateReward(uint256 _gasPrice) external view returns (uint256);

    /// Returns next request id to be generated by the Witnet Request Board.
    function getNextId() external view returns (uint256);

    /// Gets the whole Query data contents, if any, no matter its current status.
    function getQueryData(uint256 _queryId) external view returns (Witnet.Query memory);

    /// Gets current status of given query.
    function getQueryStatus(uint256 _queryId) external view returns (Witnet.QueryStatus);

    /// Retrieves the whole Request record posted to the Witnet Request Board.
    /// @dev Fails if the `_queryId` is not valid or, if it has been destroyed,
    /// @dev or if the related script bytecode got changed after being posted.
    /// @param _queryId The unique identifier of a previously posted query.
    function readRequest(uint256 _queryId) external view returns (Witnet.Request memory);

    /// Retrieves the Radon bytecode of a previously posted request.
    /// @dev Fails if the `_queryId` is not valid or, if it has been destroyed,
    /// @dev or if the related script bytecode got changed after being posted.
    /// @param _queryId The unique identifier of the request query.
    function readRequestBytecode(uint256 _queryId) external view returns (bytes memory);

    /// Retrieves the Radon bytecode of a previously posted request.
    /// @dev Fails if the `_queryId` is not valid or, if it has been destroyed,
    /// @dev or if the related script bytecode got changed after being posted.
    /// @param _queryId The unique identifier of the request.
    function readRequestGasPrice(uint256 _queryId) external view returns (uint256);

    /// Retrieves the reward currently set for a previously posted request.
    /// @dev Fails if the `_queryId` is not valid or, if it has been destroyed,
    /// @dev or if the related script bytecode got changed after being posted.
    /// @param _queryId The unique identifier of the request.
    function readRequestReward(uint256 _queryId) external view returns (uint256);

    /// Retrieves the Witnet-provided result, and metadata, to a previously posted request.    
    /// @dev Fails if the `_queryId` is not in 'Reported' status.
    /// @param _queryId The unique identifier of the request.
    function readResponse(uint256 _queryId) external view returns (Witnet.Response memory);

    /// Retrieves Witnet-provided epoch in which a previously posted request was actually solved by the Witnet DON.
    /// @dev Fails if the `_queryId` is not in 'Reported' status.
    /// @param _queryId The unique identifier of the request.
    function readResponseWitnetEpoch(uint256 _queryId) external view returns (uint256);

    /// Retrieves the Witnet-provided proof of the reported solution to a previously posted request.
    /// @dev Fails if the `_queryId` is not in 'Reported' status.
    /// @param _queryId The unique identifier of the request.
    function readResponseWitnetProof(uint256 _queryId) external view returns (bytes32);

    /// Retrieves the address that reported the result to a previously-posted request.
    /// @dev Fails if the `_queryId` is not in 'Reported' status.
    /// @param _queryId The unique identifier of the request.
    function readResponseWitnetReporter(uint256 _queryId) external view returns (address);

    /// Retrieves the Witnet-provided CBOR-bytes result of a previously posted request.
    /// @dev Fails if the `_queryId` is not in 'Reported' status.
    /// @param _queryId The unique identifier of the request.
    function readResponseWitnetResult(uint256 _queryId) external view returns (bytes memory);
}
